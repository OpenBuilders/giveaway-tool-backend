// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://t.me/seinarukiro",
            "email": "seinarukiro@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/giveaways": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of active and completed giveaways created by the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get my giveaways",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GiveawayResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Create a new giveaway with specified parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Create new giveaway",
                "parameters": [
                    {
                        "description": "Giveaway creation data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GiveawayCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GiveawayResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data (duration must be at least 5 seconds in debug mode or 5 minutes in release mode)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user is banned",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/history": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of historical giveaways (with status 'history') for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get historical giveaways",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GiveawayResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/my/active": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of active giveaways created by the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get my active giveaways",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GiveawayDetailedResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/my/history": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of completed giveaways created by the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get my giveaways history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GiveawayDetailedResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/participated/active": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of active giveaways where the current user participates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get active participated giveaways",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GiveawayDetailedResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/participated/history": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of completed giveaways where the current user participated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get participation history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GiveawayDetailedResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/prizes/custom": {
            "post": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Create a new custom prize",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Create custom prize",
                "parameters": [
                    {
                        "description": "Custom prize data",
                        "name": "prize",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomPrizeCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Prize"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/prizes/templates": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of available prize templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get prize templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PrizeTemplate"
                            }
                        }
                    }
                }
            }
        },
        "/giveaways/{id}": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get detailed information about a giveaway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get giveaway by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GiveawayResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Giveaway not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Update giveaway details (only within first 5 minutes and only by creator)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Update giveaway",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Giveaway update data",
                        "name": "giveaway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GiveawayUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GiveawayResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or giveaway not editable",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not the creator",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Giveaway not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Delete a giveaway (only by creator)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Delete giveaway",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/{id}/history": {
            "post": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Move a completed giveaway to historical status (only for creator)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Move to history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully moved to history"
                    },
                    "400": {
                        "description": "Giveaway not in completed status",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not the creator",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Giveaway not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/{id}/join": {
            "post": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Join a giveaway as a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Join giveaway",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully joined"
                    },
                    "400": {
                        "description": "Giveaway ended or max participants reached",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/{id}/participants": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of participants for a giveaway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get participants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/{id}/tickets": {
            "post": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Grant additional tickets to a user for a giveaway (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Grant tickets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ticket grant data",
                        "name": "grant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TicketGrant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tickets granted successfully"
                    },
                    "400": {
                        "description": "Invalid input or tickets not allowed",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not an admin",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/giveaways/{id}/winners": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get list of winners for a completed giveaway (only for creator)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "giveaways"
                ],
                "summary": "Get winners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Winner"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not the creator",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Giveaway not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get or create current user based on Telegram init data. If user exists, updates their information if changed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid init data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Missing init data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Get user information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user is banned",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/status": {
            "put": {
                "security": [
                    {
                        "TelegramInitData": []
                    }
                ],
                "description": "Update user status (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StatusUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user data",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - not an admin",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ChatType": {
            "type": "string",
            "enum": [
                "channel",
                "group",
                "supergroup"
            ],
            "x-enum-varnames": [
                "ChatTypeChannel",
                "ChatTypeGroup",
                "ChatTypeSupergroup"
            ]
        },
        "models.CustomPrizeCreate": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "models.GiveawayCreate": {
            "description": "Модель для создания нового розыгрыша",
            "type": "object",
            "required": [
                "description",
                "duration",
                "prizes",
                "title",
                "winners_count"
            ],
            "properties": {
                "allow_tickets": {
                    "description": "@Description Разрешены ли билеты",
                    "type": "boolean"
                },
                "auto_distribute": {
                    "description": "@Description Автоматическая выдача призов",
                    "type": "boolean"
                },
                "description": {
                    "description": "@Description Описание розыгрыша\n@Required\n@Min(10)\n@Max(1000)",
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10
                },
                "duration": {
                    "description": "@Description Длительность розыгрыша в секундах (минимум 5 секунд в режиме отладки, 5 минут в релизном режиме)\n@Required\n@Min(5)",
                    "type": "integer"
                },
                "max_participants": {
                    "description": "@Description Максимальное количество участников (0 = без ограничений)\n@Min(0)",
                    "type": "integer",
                    "minimum": 0
                },
                "prizes": {
                    "description": "@Description Список призов по местам\n@Required",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrizePlace"
                    }
                },
                "requirements": {
                    "description": "@Description Требования для участия",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Requirements"
                        }
                    ]
                },
                "title": {
                    "description": "@Description Название розыгрыша\n@Required\n@Min(3)\n@Max(100)",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "winners_count": {
                    "description": "@Description Количество победителей\n@Required\n@Min(1)",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "models.GiveawayDetailedResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "integer"
                },
                "creator_username": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "в секундах",
                    "type": "integer"
                },
                "ended_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_participants": {
                    "type": "integer"
                },
                "participants_count": {
                    "type": "integer"
                },
                "prizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrizeDetail"
                    }
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.GiveawayStatus"
                },
                "title": {
                    "type": "string"
                },
                "total_tickets": {
                    "description": "общее количество билетов",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_role": {
                    "description": "creator, participant, winner",
                    "type": "string"
                },
                "user_tickets": {
                    "description": "количество билетов пользователя",
                    "type": "integer"
                },
                "winners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WinnerDetail"
                    }
                },
                "winners_count": {
                    "type": "integer"
                }
            }
        },
        "models.GiveawayResponse": {
            "type": "object",
            "properties": {
                "allow_tickets": {
                    "description": "Разрешены ли билеты",
                    "type": "boolean"
                },
                "auto_distribute": {
                    "type": "boolean"
                },
                "can_edit": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "ends_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_participants": {
                    "type": "integer"
                },
                "participants_count": {
                    "type": "integer"
                },
                "prizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrizePlace"
                    }
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.GiveawayStatus"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_role": {
                    "description": "owner, participant, user",
                    "type": "string"
                },
                "winners": {
                    "description": "Только для завершенных розыгрышей",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Winner"
                    }
                },
                "winners_count": {
                    "type": "integer"
                }
            }
        },
        "models.GiveawayStatus": {
            "type": "string",
            "enum": [
                "active",
                "pending",
                "completed",
                "history",
                "cancelled"
            ],
            "x-enum-comments": {
                "GiveawayStatusActive": "Активный розыгрыш",
                "GiveawayStatusCancelled": "Отменен",
                "GiveawayStatusCompleted": "Завершен, победители выбраны",
                "GiveawayStatusHistory": "В истории (все призы выданы)",
                "GiveawayStatusPending": "Ожидает обработки (выбор победителей)"
            },
            "x-enum-varnames": [
                "GiveawayStatusActive",
                "GiveawayStatusPending",
                "GiveawayStatusCompleted",
                "GiveawayStatusHistory",
                "GiveawayStatusCancelled"
            ]
        },
        "models.GiveawayUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 10
                },
                "prizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PrizePlace"
                    }
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "models.Prize": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_internal": {
                    "description": "true для призов, которые выдаются автоматически",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.PrizeType"
                }
            }
        },
        "models.PrizeDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_internal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "pending, distributed, cancelled",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.PrizeType"
                }
            }
        },
        "models.PrizePlace": {
            "type": "object",
            "properties": {
                "place": {
                    "description": "1 = первое место, 2 = второе место и т.д.",
                    "type": "integer"
                },
                "prize_id": {
                    "type": "string"
                },
                "prize_type": {
                    "description": "Дублируем тип для удобства получения из Redis",
                    "type": "string"
                }
            }
        },
        "models.PrizeTemplate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_internal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.PrizeType"
                }
            }
        },
        "models.PrizeType": {
            "type": "string",
            "enum": [
                "telegram_stars",
                "telegram_premium",
                "telegram_gifts",
                "telegram_stickers",
                "custom"
            ],
            "x-enum-varnames": [
                "PrizeTypeTelegramStars",
                "PrizeTypeTelegramPremium",
                "PrizeTypeTelegramGifts",
                "PrizeTypeTelegramStickers",
                "PrizeTypeCustom"
            ]
        },
        "models.Requirement": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "description": "ID канала/чата (например, @channel_name или -100123456789)",
                    "type": "string"
                },
                "chat_name": {
                    "description": "Название чата/канала для отображения",
                    "type": "string"
                },
                "chat_type": {
                    "description": "Тип чата",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ChatType"
                        }
                    ]
                },
                "type": {
                    "description": "Тип требования",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.RequirementType"
                        }
                    ]
                }
            }
        },
        "models.RequirementType": {
            "type": "string",
            "enum": [
                "subscription",
                "booster"
            ],
            "x-enum-comments": {
                "RequirementTypeBooster": "Быть бустером канала/чата",
                "RequirementTypeSubscription": "Подписка на канал/чат"
            },
            "x-enum-varnames": [
                "RequirementTypeSubscription",
                "RequirementTypeBooster"
            ]
        },
        "models.Requirements": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Включены ли требования",
                    "type": "boolean"
                },
                "join_type": {
                    "description": "\"all\" - все требования, \"any\" - любое из требований",
                    "type": "string"
                },
                "requirements": {
                    "description": "Список требований",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Requirement"
                    }
                }
            }
        },
        "models.StatusUpdate": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "banned"
                    ],
                    "example": "active"
                }
            }
        },
        "models.TicketGrant": {
            "type": "object",
            "required": [
                "ticket_count",
                "user_id"
            ],
            "properties": {
                "ticket_count": {
                    "type": "integer",
                    "minimum": 1
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.UserResponse": {
            "description": "Публичная информация о пользователе",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-03-15T14:30:00Z"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 123456789
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "example": "user"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "banned"
                    ],
                    "example": "active"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "models.Winner": {
            "type": "object",
            "properties": {
                "place": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.WinnerDetail": {
            "type": "object",
            "properties": {
                "place": {
                    "type": "integer"
                },
                "prize": {
                    "$ref": "#/definitions/models.PrizeDetail"
                },
                "received_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "TelegramInitData": {
            "description": "Telegram Mini App init_data for authentication. This header should contain the raw init_data string from Telegram Mini App. Example: query_id=AAHdF6IQAAAAAN0XohDhrOrc\u0026user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Test%22%2C%22last_name%22%3A%22User%22%2C%22username%22%3A%22testuser%22%2C%22language_code%22%3A%22en%22%7D\u0026auth_date=1684062091\u0026hash=c5b7e2f670fdf15479c8f0cd2028d88ad449e1c6273b8c7a69bb32f0f6c6",
            "type": "apiKey",
            "name": "init_data",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "User management endpoints",
            "name": "users"
        },
        {
            "description": "Giveaway management endpoints",
            "name": "giveaways"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Giveaway Tool API",
	Description:      "API Server for Giveaway Tool application. All endpoints require Telegram Mini App init_data for authentication.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
